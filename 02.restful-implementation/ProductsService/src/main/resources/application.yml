spring:
  application:
    name: ProductsService
  profiles.active: dev

server:
  servlet.contextPath: /api
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

spring.mvc.pathmatch.matching-strategy: ANT_PATH_MATCHER

# TODO: OPENAPI CONFIG
#springdoc.api-docs.enabled: false
#springdoc.swagger-ui.enabled: false
springdoc.swagger-ui.path: /products-documentation
springdoc.api-docs.path: /products-api-docs
#springdoc.packages-to-scan: com.netmind.productsservice.controller
#springdoc.swagger-ui.tryItOutEnabled: true
#springdoc.swagger-ui.operationsSorter: method
#springdoc.swagger-ui.tagsSorter: alpha
#springdoc.swagger-ui.filter: true

products.openapi:
  dev-url: http://localhost:8080
  prod-url: https://products-api.com


---
spring:
  sql.init.mode: always
  config.activate.on-profile: dev
  devtools.restart.enabled: true
  application:
    name: ProductsService
  datasource:
    url: "jdbc:h2:mem:productsdb"
    driverClassName: org.h2.Driver
    username: sa
    password: password
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
      generate-ddl: true
    defer-datasource-initialization: true
  h2:
    console.enabled: true
    console.path: /h2-ui

server:
  #  servlet.contextPath: /api
  port: 9090

#debug: true
logging:
  path: /var/tmp/
  file: /var/tmp/mylog.log
  level:
    root: WARN


---
spring:
  config.activate.on-profile: prod
  application:
    name: ProductsService

server:
  servlet.contextPath: /api/v1
  port: 443
  ssl:
    key-store: "keystore2.p12"
    key-store-password: xxxxxx
    keyStoreType: PKCS12
    keyAlias: prod

security.require-ssl: true

